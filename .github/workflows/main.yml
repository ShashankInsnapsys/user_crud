name: Vulnerability Audit

on:
  push:
    branches:
      - main

jobs:
  check-vulnerabilities:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Install Node.js and npm
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    - name: Install Composer
      run: |
        php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        php composer-setup.php
        php -r "unlink('composer-setup.php');"
        mv composer.phar /usr/local/bin/composer
    - name: Install Dependencies
      run: |
        npm install
        composer install
    - name: Check npm vulnerabilities
      run: npm audit --json > npm-audit.json
      continue-on-error: true

    - name: Check Composer vulnerabilities
      run: composer audit --format=json > composer-audit.json
      continue-on-error: true

    - name: Check if Vulnerabilities are present
      id: condition
      run: |
        COMPOSER_REPORT=$(cat composer-audit.json | jq -r '.advisories')
        NPM_AUDIT_METADATA=$(cat npm-audit.json | jq -r '.metadata')
        NPM_AUDIT_VULNERABILITIES=$(echo $NPM_AUDIT_METADATA | jq -r '.vulnerabilities')
        NPM_AUDIT_VULNERABILITIES_info=$(echo $NPM_AUDIT_VULNERABILITIES | jq -r '.info')
        NPM_AUDIT_VULNERABILITIES_low=$(echo $NPM_AUDIT_VULNERABILITIES | jq -r '.low')
        NPM_AUDIT_VULNERABILITIES_moderate=$(echo $NPM_AUDIT_VULNERABILITIES | jq -r '.moderate')
        NPM_AUDIT_VULNERABILITIES_high=$(echo $NPM_AUDIT_VULNERABILITIES | jq -r '.high')
        NPM_AUDIT_VULNERABILITIES_critical=$(echo $NPM_AUDIT_VULNERABILITIES | jq -r '.critical')
        TOTAL=$(python -c "print($NPM_AUDIT_VULNERABILITIES_info + $NPM_AUDIT_VULNERABILITIES_low + $NPM_AUDIT_VULNERABILITIES_moderate + $NPM_AUDIT_VULNERABILITIES_high + $NPM_AUDIT_VULNERABILITIES_critical)")
        echo "Extracted Value of composer audit: $COMPOSER_REPORT"
        echo "Extracted value of npm audit: $TOTAL"
        if [ $TOTAL != "0" ] || [ $COMPOSER_REPORT != "[]" ]; then
          #echo "::set-output name=isVulnerabilitiesPresent::true"
          #echo "NPM Vulnerabilities Audit $(cat npm-audit.md) Composer Vulnerabilities Audit $(cat composer-outdated.md)" >> issue_body.md
          #echo "$(cat npm-audit.txt)" >> issue_body.txt
          #echo "" >> issue_body.txt
          #echo "Composer Vulnerabilities Audit" >> issue_body.txt
          #echo "" >> issue_body.txt
          #echo "$(cat composer-outdated.txt)" >> issue_body.txt
          #cat issue_body.md
          #echo "::set-output name=issue_body::$(cat issue_body.md)"
          echo "TRUE"
        else
          echo "FALSE"
          #echo "::set-output name=isVulnerabilitiesPresent::false"
        fi
    #- name: Create Issue
      #if: steps.condition.outputs.isVulnerabilitiesPresent == 'true'
      #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #uses: octokit/request-action@v2.x
      #with:
        #route: POST /repos/${{ github.repository }}/issues
        #owner: ${{ github.repository_owner }}
        #repo: ${{ github.repository }}
        #title: "Vulnerabilities found in dependencies"
        #body: ${{ steps.condition.outputs.issue_body }}
        #labels: |
          #- vulnerability
        #assignees: |
          #- "ShashankInsnapsys"
